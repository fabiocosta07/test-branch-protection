name: PR Workflow

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-restricted-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for restricted files changes
        id: check-files
        run: |
          pr_number=${{ github.event.number }}
          echo "PR Number: $pr_number"

          modified_files=$(curl -s -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$pr_number/files" | jq -r '.[].filename')

          echo "Modified files: $modified_files"

          restricted_files=("test.txt")  # Add your restricted files here

          restricted=false
          for file in "${restricted_files[@]}"; do
            if echo "$modified_files" | grep -q "$file"; then
              echo "Restricted file $file was modified."
              echo "restricted=true" >> "$GITHUB_ENV"
              break
            fi
          done

      - name: Check for code owner approval
        id: check-approval
        run: |
          echo "Restricted: $restricted"
          if [ "$restricted" != "true" ]; then
            echo "No restricted files were modified. Skipping code owner approval check."
            exit 0
          fi

          # Fetch the PR details
          PR_NUMBER=$(jq --raw-output .number "$GITHUB_EVENT_PATH")
          REPO_FULL_NAME=$(jq --raw-output .repository.full_name "$GITHUB_EVENT_PATH")

          # Fetch the reviews
          REVIEWS=$(curl -s -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
            "https://api.github.com/repos/$REPO_FULL_NAME/pulls/$PR_NUMBER/reviews")

          # Initialize the approval count
          APPROVAL_COUNT=0

          # Fetch the CODEOWNERS file
          CODEOWNERS_CONTENT=$(curl -s -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
            "https://api.github.com/repos/$REPO_FULL_NAME/contents/.github/CODEOWNERS")

          CODEOWNERS=$(echo "$CODEOWNERS_CONTENT" | jq -r '.content' | base64 --decode | grep -v '^#' | awk '{print $NF}')

          # Check if at least two code owners have approved the PR
          for review in $(echo "$REVIEWS" | jq -r '.[] | @base64'); do
            _jq() {
              echo ${review} | base64 --decode | jq -r ${1}
            }

            REVIEWER=$(_jq '.user.login')
            if [[ $(_jq '.state') == "APPROVED" ]] && echo "$CODEOWNERS" | grep -qw "$REVIEWER"; then
              APPROVAL_COUNT=$((APPROVAL_COUNT + 1))
            fi
          done

          echo "Number of code owner approvals: $APPROVAL_COUNT"

          if [ "$APPROVAL_COUNT" -lt 2 ]; then
            echo "PR must be approved by at least two code owners"
            exit 1
          fi
