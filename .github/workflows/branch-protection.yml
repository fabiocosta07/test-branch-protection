name: PR Workflow

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-restricted-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for restricted files changes
        id: check-files
        run: |
          pr_number=${{ github.event.number }}
          echo "PR Number: $pr_number"

          modified_files=$(curl -s -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$pr_number/files" | jq -r '.[].filename')

          echo "Modified files: $modified_files"

          restricted_files=("test.txt")  # Add your restricted files here

          restricted=false
          for file in "${restricted_files[@]}"; do
            if echo "$modified_files" | grep -q "$file"; then
              echo "Restricted file $file was modified."
              echo "restricted=true" >> "$GITHUB_ENV"
              break
            fi
          done

      - name: Check for code owner approval
        id: check-approval
        run: |
          echo "Restricted: $restricted"
          if [ "$restricted" != "true" ]; then
            echo "No restricted files were modified. Skipping code owner approval check."
            exit 0
          fi
          pr_number=${{ github.event.number }}
          echo "PR Number: $pr_number"

          approvals=$(curl -s -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$pr_number/reviews" | \
            jq '[.[] | select(.state == "APPROVED") | .user.login] | unique | length')

          echo "Number of approvals: $approvals"

          if [ "$approvals" -lt 1 ]; then
            echo "At least one code owner approval is required."
            exit 1
          fi
